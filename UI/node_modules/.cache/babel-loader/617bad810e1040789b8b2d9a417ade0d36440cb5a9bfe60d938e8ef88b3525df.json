{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { capitalizeText } from '../common/textOperations';\nexport const selectedEmployeeInformation = createSlice({\n  name: \"Selected Employee Personal Information\",\n  initialState: {\n    selectedEmployeeID: \"\",\n    firstName: \"\",\n    email: \"\",\n    department: \"\",\n    mobile: \"\",\n    assignedManager: \"\",\n    gender: \"\"\n  },\n  reducers: {\n    setSelectedEmployeePersonalInformation: (state, action) => {\n      return state = {\n        selectedEmployeeID: action.payload.selectedEmployeeID,\n        firstName: capitalizeText(action.payload.firstName),\n        email: action.payload.email,\n        department: action.payload.department,\n        mobile: action.payload.mobile,\n        assignedManager: action.payload.assignedManager,\n        gender: action.payload.gender\n      };\n    },\n    clearSelectedEmployeePersonalInformation: state => {\n      return state = {\n        selectedEmployeeID: \"\",\n        firstName: \"\",\n        email: \"\",\n        department: \"\",\n        mobile: \"\",\n        assignedManager: \"\",\n        gender: \"\"\n      };\n    }\n  }\n});\nexport const {\n  setSelectedEmployeePersonalInformation,\n  clearSelectedEmployeePersonalInformation\n} = selectedEmployeeInformation.actions;\nexport default selectedEmployeeInformation.reducer;","map":{"version":3,"names":["createSlice","capitalizeText","selectedEmployeeInformation","name","initialState","selectedEmployeeID","firstName","email","department","mobile","assignedManager","gender","reducers","setSelectedEmployeePersonalInformation","state","action","payload","clearSelectedEmployeePersonalInformation","actions","reducer"],"sources":["C:/Users/ITeos/Desktop/My Projects/Git/Dealer Portal/dealer-portal/UI/src/reduxStorage/selectedEmployeeInformation.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { capitalizeText } from '../common/textOperations';\r\n\r\nexport const selectedEmployeeInformation = createSlice({\r\n    name: \"Selected Employee Personal Information\",\r\n    initialState: {\r\n        selectedEmployeeID: \"\",\r\n        firstName: \"\",\r\n        email: \"\",\r\n        department: \"\",\r\n        mobile: \"\",\r\n        assignedManager: \"\",\r\n        gender: \"\",\r\n    },\r\n\r\n    reducers: {\r\n        setSelectedEmployeePersonalInformation: (state, action) => {\r\n            return state = {\r\n                selectedEmployeeID: action.payload.selectedEmployeeID,\r\n                firstName: capitalizeText(action.payload.firstName),\r\n                email: action.payload.email,\r\n                department: action.payload.department,\r\n                mobile: action.payload.mobile,\r\n                assignedManager: action.payload.assignedManager,\r\n                gender: action.payload.gender,\r\n            }\r\n        },\r\n\r\n     \r\n        clearSelectedEmployeePersonalInformation: (state) => {\r\n            return state = {\r\n                selectedEmployeeID: \"\",\r\n                firstName: \"\",\r\n                email: \"\",\r\n                department: \"\",\r\n                mobile: \"\",\r\n                assignedManager:\"\",\r\n                gender: \"\",\r\n            };\r\n        },\r\n\r\n    },\r\n})\r\n\r\nexport const { setSelectedEmployeePersonalInformation, clearSelectedEmployeePersonalInformation } = selectedEmployeeInformation.actions;\r\n\r\nexport default selectedEmployeeInformation.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,OAAO,MAAMC,2BAA2B,GAAGF,WAAW,CAAC;EACnDG,IAAI,EAAE,wCAAwC;EAC9CC,YAAY,EAAE;IACVC,kBAAkB,EAAE,EAAE;IACtBC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,UAAU,EAAE,EAAE;IACdC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,EAAE;IACnBC,MAAM,EAAE;EACZ,CAAC;EAEDC,QAAQ,EAAE;IACNC,sCAAsC,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvD,OAAOD,KAAK,GAAG;QACXT,kBAAkB,EAAEU,MAAM,CAACC,OAAO,CAACX,kBAAkB;QACrDC,SAAS,EAAEL,cAAc,CAACc,MAAM,CAACC,OAAO,CAACV,SAAS,CAAC;QACnDC,KAAK,EAAEQ,MAAM,CAACC,OAAO,CAACT,KAAK;QAC3BC,UAAU,EAAEO,MAAM,CAACC,OAAO,CAACR,UAAU;QACrCC,MAAM,EAAEM,MAAM,CAACC,OAAO,CAACP,MAAM;QAC7BC,eAAe,EAAEK,MAAM,CAACC,OAAO,CAACN,eAAe;QAC/CC,MAAM,EAAEI,MAAM,CAACC,OAAO,CAACL;MAC3B,CAAC;IACL,CAAC;IAGDM,wCAAwC,EAAGH,KAAK,IAAK;MACjD,OAAOA,KAAK,GAAG;QACXT,kBAAkB,EAAE,EAAE;QACtBC,SAAS,EAAE,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,EAAE;QACdC,MAAM,EAAE,EAAE;QACVC,eAAe,EAAC,EAAE;QAClBC,MAAM,EAAE;MACZ,CAAC;IACL;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,sCAAsC;EAAEI;AAAyC,CAAC,GAAGf,2BAA2B,CAACgB,OAAO;AAEvI,eAAehB,2BAA2B,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}